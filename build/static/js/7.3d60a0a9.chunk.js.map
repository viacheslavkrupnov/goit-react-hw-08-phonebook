{"version":3,"sources":["components/FormComponents/FormContainer.js","components/FormComponents/Form.js","components/FormComponents/Input.js","components/FormComponents/PrimaryButton.js","views/RegisterView.js"],"names":["useStyles","makeStyles","theme","root","marginTop","spacing","display","flexDirection","alignItems","marginBottom","FormContainer","children","props","styles","className","component","maxWidth","width","Form","noValidate","Input","forwardRef","ref","variant","margin","inputRef","fullWidth","color","background","boxShadow","PrimaryButton","type","RegisterView","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","onSubmit","e","preventDefault","authOperations","register","autoComplete","label","onChange"],"mappings":"kNAIMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,aAAc,YAmBHC,IAfO,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAaC,EAAY,iBAC1CC,EAASb,IAEf,OACE,cAAC,IAAD,yBACEc,UAAWD,EAAOV,KAClBY,UAAU,OACVC,SAAS,MACLJ,GAJN,aAMGD,O,0FCrBDX,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJc,MAAO,OACPb,UAAWF,EAAMG,QAAQ,QAada,IATF,SAAC,GAA4B,IAA1BP,EAAyB,EAAzBA,SAAaC,EAAY,iBACjCC,EAASb,IACf,OACE,8CAAMc,UAAWD,EAAOV,KAAMgB,YAAU,GAAKP,GAA7C,aACGD,O,oECXDS,EAAQC,sBAAW,SAACT,EAAOU,GAC/B,OACE,cAAC,IAAD,aACEC,QAAQ,WACRC,OAAO,SACPC,SAAUH,EACVI,WAAS,EACTC,MAAM,aACFf,OAIKQ,O,mGCXTpB,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJqB,OAAQtB,EAAMG,QAAQ,EAAG,EAAG,GAC5BuB,WAAY,mDACZC,UAAW,4CAqBAC,IAjBO,SAAC,GAA4B,IAA1BnB,EAAyB,EAAzBA,SAAaC,EAAY,iBAC1CC,EAASb,IAEf,OACE,cAAC,IAAD,yBACE+B,KAAK,SACLL,WAAS,EACTH,QAAQ,YAERT,UAAWD,EAAOV,MACdS,GANN,aAQGD,O,8JCfQ,SAASqB,IACtB,IAAMC,EAAWC,cACjB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUP,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,MACtC,OAAQR,GACN,IAAK,OACH,OAAOC,EAAQO,GACjB,IAAK,QACH,OAAOL,EAASK,GAClB,IAAK,WACH,OAAOH,EAAYG,GACrB,QACE,SAYN,OACI,cAAC,IAAD,UACA,eAAC,IAAD,CAAMC,SAVW,SAAAC,GACnBA,EAAEC,iBACFd,EAASe,IAAeC,SAAS,CAAEb,OAAME,QAAOE,cAChDH,EAAQ,IACRE,EAAS,IACTE,EAAY,KAKoBS,aAAa,MAA3C,UACI,cAAC,IAAD,CACEnB,KAAK,OACLK,KAAK,OACLe,MAAM,OACNP,MAAOR,EACPgB,SAAUV,IAGZ,cAAC,IAAD,CACEX,KAAK,QACLK,KAAK,QACLe,MAAM,QACNP,MAAON,EACPc,SAAUV,IAGZ,cAAC,IAAD,CACCX,KAAK,WACLK,KAAK,WACLQ,MAAOJ,EACPW,MAAM,WACNC,SAAUV,IAGV,cAAC,IAAD,CAAeX,KAAK,SAASJ,MAAM,UAAnC","file":"static/js/7.3d60a0a9.chunk.js","sourcesContent":["import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginBottom: 'auto',\n  },\n}));\n\nconst FormContainer = ({ children, ...props }) => {\n  const styles = useStyles();\n\n  return (\n    <Container\n      className={styles.root}\n      component=\"main\"\n      maxWidth=\"xs\"\n      {...props}\n    >\n      {children}\n    </Container>\n  );\n};\n\nexport default FormContainer;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n}));\n\nconst Form = ({ children, ...props }) => {\n  const styles = useStyles();\n  return (\n    <form className={styles.root} noValidate {...props}>\n      {children}\n    </form>\n  );\n};\n\nexport default Form;","import { TextField } from '@material-ui/core';\nimport React, { forwardRef } from 'react';\n\nconst Input = forwardRef((props, ref) => {\n  return (\n    <TextField\n      variant=\"outlined\"\n      margin=\"normal\"\n      inputRef={ref}\n      fullWidth\n      color=\"secondary\"\n      {...props}\n    />\n  );\n});\nexport default Input;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(3, 0, 2),\n    background: 'linear-gradient(45deg, #71BC78 30%, #1DACD6 90%)',\n    boxShadow: '0 3px 5px 2px rgba(137, 196, 244, 1)',\n  },\n}));\n\nconst PrimaryButton = ({ children, ...props }) => {\n  const styles = useStyles();\n\n  return (\n    <Button\n      type=\"submit\"\n      fullWidth\n      variant=\"contained\"\n      // color=\"secondary\"\n      className={styles.root}\n      {...props}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport default PrimaryButton;","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../redux/auth';\n\nimport Form from '../components/FormComponents/Form';\nimport FormContainer from '../components/FormComponents/FormContainer';\nimport Input from '../components/FormComponents/Input';\nimport PrimaryButton from '../components/FormComponents/PrimaryButton';\n\nexport default function RegisterView() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n      <FormContainer>\n      <Form onSubmit={handleSubmit} autoComplete=\"off\">\n          <Input \n            type=\"text\" \n            name=\"name\" \n            label=\"Name\"\n            value={name} \n            onChange={handleChange} \n          />\n\n          <Input\n            type=\"email\"\n            name=\"email\"\n            label=\"Email\"\n            value={email}\n            onChange={handleChange}\n          />\n\n          <Input\n           type=\"password\"\n           name=\"password\"\n           value={password}\n           label=\"Password\"\n           onChange={handleChange}\n         />\n\n           <PrimaryButton type=\"submit\" color=\"primary\">\n           Sign up\n         </PrimaryButton>\n\n      </Form>\n      </FormContainer>\n  );\n}\n\n"],"sourceRoot":""}